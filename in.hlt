let numbers =
        \b. b 'n0' (
        \b. b 'n1' (
        \b. b 'n2' (
        \b. b 'n3' (
        \b. b 'n4' (
        \b. b 'n5' (
        \b. b 'n6' (
        \b. b 'n7' (
        \b. b 'n8' (
        \b. b 'n9' (
        \b. b 'n10' (
        \b. b 'n11' (
        \b. b 'n12' (
        \b. b 'n13' (
        \b. b 'n14' (
        \b. b 'n15' (
        \b. b 'n16' (
        \b. b 'n17' (
        \b. b 'n18' (
        \b. b 'n19' (
        \b. b 'n20' (
        \b. b 'n21' (
        \b. b 'n22' (
        \b. b 'n23' (
        \b. b 'n24' (
        \b. b 'n25' (
        \b. b 'n26' (
        \b. b 'n27' (
        \b. b 'n28' (
        \b. b 'n29' (
        \b. b 'n30' (
        \b. b 'n31' (
        \b. b 'n32' (
        \b. b 'n33' !
        )))))))))))))))))))))))))))))))));

    succ = \n f x. f (n f x);
    n0 = \f x. x;
    n1 = succ n0;
    n2 = succ n1;
    n3 = succ n2;
    n4 = succ n3;
    n5 = succ n4;

    sum = \n m f x. n f (m f x);
    prod = \n m f x. n (m f) x;
    pow = \n m. m n;

    true = \a b. a;
    false = \a b. b;

    evalN = \n. (n (\l. l false) numbers) true;

    squaresAfter =
        \n b.
            b (pow n n2) (squaresAfter (succ n));

    squares = squaresAfter n0;


    takeN = \n.
        ( (succ n)
            (\restres b.
                b
                    (restres true false)
                    ('cons' (evalN (restres true true)) (restres false))
            ) (\b. b squares 'empty')
        ) false;

in takeN n5
